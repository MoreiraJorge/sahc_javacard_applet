// converted by version  [v3.1.0]
// on Mon May 23 22:24:06 BST 2022

.package sahc {
	.aid 0x1:0x23:0x45:0x67:0x89:0x0;
	.version 1.0;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.8;		//javacard/framework
		0xA0:0x0:0x0:0x0:0x62:0x1:0x2 1.7;		//javacard/security
		0xA0:0x0:0x0:0x0:0x62:0x2:0x1 1.7;		//javacardx/crypto
		0xA0:0x0:0x0:0x0:0x62:0x0:0x1 1.0;		//java/lang
	}

	.applet {
		0x1:0x23:0x45:0x67:0x89:0x11 sahcApplet;
	}

	.constantPool {
		// 0
		instanceFieldRef byte[] sahcApplet/hash;
		// 1
		instanceFieldRef byte sahcApplet/isHashEmpty;
		// 2
		instanceFieldRef 1.10 sahcApplet/desKey;
		// 3
		instanceFieldRef 2.1 sahcApplet/encryptCipher;
		// 4
		.classRef sahcApplet;
		// 5
		staticMethodRef 1.13.0(BSZ)Ljavacard/security/Key;;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
			.descriptor	Ljavacard/security/Key;	1.0;

		// 6
		.classRef 1.10;		// javacard/security/DESKey
		// 7
		staticMethodRef 0.3.0()V;		// javacard/framework/Applet.<init>()V
		// 8
		staticMethodRef 2.1.0(BZ)Ljavacardx/crypto/Cipher;;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
			.descriptor	Ljavacardx/crypto/Cipher;	2.1;

		// 9
		staticMethodRef sahcApplet/<init>()V;
		// 10
		virtualMethodRef 0.3.1()V;		// register()V
		// 11
		virtualMethodRef 0.10.1()[B;		// getBuffer()[B
		// 12
		virtualMethodRef 0.10.14()Z;		// isISOInterindustryCLA()Z
		// 13
		staticMethodRef 0.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 14
		staticMethodRef sahcApplet/init(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 15
		staticMethodRef sahcApplet/cipherDes(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 16
		.classRef 1.12;		// javacard/security/CryptoException
		// 17
		staticMethodRef 1.14.0(B)Ljavacard/security/RandomData;;		// javacard/security/RandomData.getInstance(B)Ljavacard/security/RandomData;
			.descriptor	Ljavacard/security/RandomData;	1.14;

		// 18
		staticMethodRef 0.8.13(SB)[B;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
		// 19
		virtualMethodRef 0.10.7()S;		// setOutgoing()S
		// 20
		virtualMethodRef 1.14.2([BSS)V;		// setSeed([BSS)V
		// 21
		virtualMethodRef 1.14.3([BSS)S;		// nextBytes([BSS)S
		// 22
		staticMethodRef 0.8.1()V;		// javacard/framework/JCSystem.beginTransaction()V
		// 23
		staticMethodRef 1.30.0(B)Ljavacard/security/MessageDigest$OneShot;;		// javacard/security/MessageDigest$OneShot.open(B)Ljavacard/security/MessageDigest$OneShot;
			.descriptor	Ljavacard/security/MessageDigest$OneShot;	1.30;

		// 24
		virtualMethodRef 1.30.1([BSS[BS)S;		// doFinal([BSS[BS)S
		// 25
		staticMethodRef 0.8.2()V;		// javacard/framework/JCSystem.commitTransaction()V
		// 26
		virtualMethodRef 0.10.9(S)V;		// setOutgoingLength(S)V
		// 27
		virtualMethodRef 0.10.5([BSS)V;		// sendBytesLong([BSS)V
		// 28
		.classRef 0.7;		// javacard/framework/ISOException
		// 29
		staticMethodRef 0.7.0(S)V;		// javacard/framework/ISOException.<init>(S)V
		// 30
		virtualMethodRef 1.12.1()S;		// getReason()S
		// 31
		virtualMethodRef 0.10.6()S;		// setIncomingAndReceive()S
		// 32
		staticMethodRef sahcApplet/getCipherSize(S)S;
		// 33
		virtualMethodRef 2.1.3(Ljavacard/security/Key;B)V;		// init(Ljavacard/security/Key;B)V
			.descriptor	Ljavacard/security/Key;	1.0;

		// 34
		virtualMethodRef 2.1.1([BSS[BS)S;		// doFinal([BSS[BS)S
		// 35
		staticMethodRef 0.16.2([BS[BSS)S;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
		// 36
		virtualMethodRef 0.10.8(SS)V;		// setOutgoingAndSend(SS)V
		// 37
		staticMethodRef 3.0.0()V;		// java/lang/Object.<init>()V
	}

	.class public sahcApplet 0 extends 0.3 {		// extends javacard/framework/Applet

		.fields {
			 byte[] hash 0;		// [B
			 1.10 desKey 1;		// Ljavacard/security/DESKey;
			 2.1 encryptCipher 2;		// Ljavacardx/crypto/Cipher;
			 byte isHashEmpty 3;		// B
			static final byte APP_CLA = -128;		// B
			static final byte INIT = 16;		// B
			static final byte CIPHER = 17;		// B
		}

		.publicMethodTable 7 8 {
			equals(Ljava/lang/Object;)Z 0;
			register()V 1;
			register([BSB)V 2;
			selectingApplet()Z 3;
			deselect()V 4;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable; 5;
			select()Z 6;
			process(Ljavacard/framework/APDU;)V 7;
		}

		.packageMethodTable 0 {
		}

		.method public static install([BSB)V 0 {
			.stack 1;
			.locals 0;

				L0:	new 4;		// sahc/sahcApplet
					invokespecial 9;		// sahc/sahcApplet.<init>()V
					return;
		}

		.method protected <init>()V 1 {
			.stack 4;
			.locals 0;

				L0:	aload_0;
					invokespecial 7;		// javacard/framework/Applet.<init>()V
					aload_0;
					bspush 32;
					newarray 11;
					putfield_a 0;		// reference sahc/sahcApplet.hash
					sconst_1;
					putfield_b_this 1;		// byte sahc/sahcApplet.isHashEmpty
					aload_0;
					sconst_1;
					sspush 128;
					sconst_0;
					invokestatic 5;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					checkcast 0 6;		// T_CLASSORINTERFACE javacard/security/DESKey
					putfield_a 2;		// reference sahc/sahcApplet.desKey
					aload_0;
					sconst_3;
					sconst_0;
					invokestatic 8;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 3;		// reference sahc/sahcApplet.encryptCipher
					aload_0;
					invokevirtual 10;		// register()V
					return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 2;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 11;		// getBuffer()[B
					astore_2;
				L1:	aload_1;
					invokevirtual 12;		// isISOInterindustryCLA()Z
					ifeq L5;
				L2:	aload_2;
					sconst_1;
					baload;
					bspush -92;
					if_scmpne L4;
				L3:	return;
				L4:	sspush 28160;
					invokestatic 13;		// javacard/framework/ISOException.throwIt(S)V
				L5:	aload_2;
					sconst_0;
					baload;
					bspush -128;
					if_scmpeq L7;
				L6:	sspush 28160;
					invokestatic 13;		// javacard/framework/ISOException.throwIt(S)V
				L7:	aload_2;
					sconst_1;
					baload;
					stableswitch L10 16 17 L8 L9;
				L8:	aload_0;
					aload_1;
					invokespecial 14;		// sahc/sahcApplet.init(Ljavacard/framework/APDU;)V
					return;
				L9:	aload_0;
					aload_1;
					invokespecial 15;		// sahc/sahcApplet.cipherDes(Ljavacard/framework/APDU;)V
					return;
				L10:	sspush 27904;
					invokestatic 13;		// javacard/framework/ISOException.throwIt(S)V
					return;
		}

		.method private init(Ljavacard/framework/APDU;)V {
			.stack 6;
			.locals 6;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aconst_null;
					astore_2;
				L1:	sconst_1;
					invokestatic 17;		// javacard/security/RandomData.getInstance(B)Ljavacard/security/RandomData;
					astore_2;
				L2:	getfield_b_this 1;		// byte sahc/sahcApplet.isHashEmpty
					sconst_1;
					if_scmpne L12;
				L3:	bspush 32;
					sconst_2;
					invokestatic 18;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					astore_3;
				L4:	aload_1;
					invokevirtual 11;		// getBuffer()[B
					astore 4;
				L5:	aload_1;
					invokevirtual 19;		// setOutgoing()S
					sstore 5;
				L6:	sload 5;
					sconst_2;
					if_scmpge L8;
				L7:	sspush 26368;
					invokestatic 13;		// javacard/framework/ISOException.throwIt(S)V
				L8:	aconst_null;
					astore 6;
				L9:	bspush 8;
					sconst_2;
					invokestatic 18;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					astore 7;
				L10:	aload_2;
					aload_3;
					sconst_0;
					aload_3;
					arraylength;
					invokevirtual 20;		// setSeed([BSS)V
					aload_2;
					aload 7;
					sconst_0;
					aload 7;
					arraylength;
					invokevirtual 21;		// nextBytes([BSS)S
					pop;
					invokestatic 22;		// javacard/framework/JCSystem.beginTransaction()V
					sconst_4;
					invokestatic 23;		// javacard/security/MessageDigest$OneShot.open(B)Ljavacard/security/MessageDigest$OneShot;
					astore 6;
					aload 6;
					aload 7;
					sconst_0;
					sconst_4;
					getfield_a_this 0;		// reference sahc/sahcApplet.hash
					sconst_0;
					invokevirtual 24;		// doFinal([BSS[BS)S
					pop;
					sconst_0;
					putfield_b_this 1;		// byte sahc/sahcApplet.isHashEmpty
					invokestatic 25;		// javacard/framework/JCSystem.commitTransaction()V
					aload_1;
					aload 7;
					arraylength;
					invokevirtual 26;		// setOutgoingLength(S)V
					aload 7;
					astore 4;
					aload_1;
					aload 4;
					sconst_0;
					aload 7;
					arraylength;
					invokevirtual 27;		// sendBytesLong([BSS)V
				L11:	goto L16;
				L12:	new 28;		// javacard/framework/ISOException
					dup;
					sspush 27014;
					invokespecial 29;		// javacard/framework/ISOException.<init>(S)V
					athrow;
				L13:	astore_3;
				L14:	aload_3;
					invokevirtual 30;		// getReason()S
					sconst_3;
					if_scmpeq L16;
				L15:	aload_3;
					athrow;
				L16:	return;
			.exceptionTable {
				// start_block end_block handler_block catch_type_index
				L2 L13 L13 16;
			}
		}

		.method private cipherDes(Ljavacard/framework/APDU;)V {
			.stack 6;
			.locals 7;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	getfield_b_this 1;		// byte sahc/sahcApplet.isHashEmpty
					ifne L16;
				L1:	aload_1;
					invokevirtual 11;		// getBuffer()[B
					astore_2;
				L2:	aload_1;
					invokevirtual 31;		// setIncomingAndReceive()S
					sstore_3;
				L3:	aload_2;
					sconst_2;
					baload;
					ifne L5;
				L4:	sconst_2;
					goto L6;
				L5:	sconst_1;
				L6:	sstore 4;
				L7:	aload_2;
					sconst_2;
					baload;
					ifne L9;
				L8:	aload_0;
					sload_3;
					invokespecial 32;		// sahc/sahcApplet.getCipherSize(S)S
					goto L10;
				L9:	aload_2;
					sconst_3;
					baload;
				L10:	sstore 5;
				L11:	sload 5;
					sconst_2;
					invokestatic 18;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					astore 6;
				L12:	sconst_1;
					sspush 128;
					sconst_0;
					invokestatic 5;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					checkcast 0 6;		// T_CLASSORINTERFACE javacard/security/DESKey
					astore 7;
				L13:	aload 7;
					getfield_a_this 0;		// reference sahc/sahcApplet.hash
					sconst_0;
					invokeinterface 3 6 5;		// javacard/security/DESKey
					sconst_3;
					sconst_0;
					invokestatic 8;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					astore 8;
				L14:	aload 8;
					aload 7;
					sload 4;
					invokevirtual 33;		// init(Ljavacard/security/Key;B)V
					aload 8;
					aload_2;
					sconst_5;
					sload_3;
					aload 6;
					sconst_0;
					invokevirtual 34;		// doFinal([BSS[BS)S
					pop;
					aload 6;
					sconst_0;
					aload_2;
					sconst_5;
					aload 6;
					arraylength;
					invokestatic 35;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_1;
					sconst_5;
					aload 6;
					arraylength;
					invokevirtual 36;		// setOutgoingAndSend(SS)V
				L15:	goto L19;
				L16:	new 28;		// javacard/framework/ISOException
					dup;
					sspush 27014;
					invokespecial 29;		// javacard/framework/ISOException.<init>(S)V
					athrow;
				L17:	astore_2;
				L18:	aload_2;
					invokevirtual 30;		// getReason()S
					pop;
					aload_2;
					athrow;
				L19:	return;
			.exceptionTable {
				// start_block end_block handler_block catch_type_index
				L0 L17 L17 16;
			}
		}

		.method private getCipherSize(S)S {
			.stack 4;
			.locals 0;

				L0:	sload_1;
					bspush 8;
					srem;
					ifne L2;
				L1:	sload_1;
					bspush 8;
					sadd;
					sreturn;
				L2:	sload_1;
					bspush 8;
					sload_1;
					bspush 8;
					srem;
					ssub;
					sadd;
					sreturn;
		}

	}

	.class final sahcAppletStrings extends 3.0 {		// extends java/lang/Object

		.fields {
			static final byte[] Package = {115,97,104,99};		// [B
			static final byte[] AppletName = {115,97,104,99,65,112,112,108,101,116};		// [B
		}

		.publicMethodTable 1 1 {
			equals(Ljava/lang/Object;)Z 0;
		}

		.packageMethodTable 0 {
		}

		.method  <init>()V {
			.stack 1;
			.locals 0;

				L0:	aload_0;
					invokespecial 37;		// java/lang/Object.<init>()V
					return;
		}

	}

}
